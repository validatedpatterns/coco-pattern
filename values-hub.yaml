# This is currently configured as an 'all in one' deployment

clusterGroup:
  name: hub
  isHubCluster: true
  namespaces:
  - open-cluster-management
  - vault
  - golang-external-secrets
  - openshift-sandboxed-containers-operator
  - trustee-operator-system
  - hello-openshift
  - cert-manager-operator
  - cert-manager
  - lets-encrypt

  # AI stuff 
  - redhat-ods-operator
  - openshift-pipelines
  - openshift-storage
  - openshift-nfd
  - nvidia-gpu-operator
  - openshift-serverless
  - knative-serving


  subscriptions:
    # ACM is kept anticipating 
    acm:
      name: advanced-cluster-management
      namespace: open-cluster-management
      channel: release-2.11

    sandbox:
      name: sandboxed-containers-operator
      namespace: openshift-sandboxed-containers-operator
      channel: stable
      version: "1.7.0" # ask for latest

    trustee:
      name: trustee-operator
      namespace: trustee-operator-system
      source: redhat-operators
      channel: stable
    rhoai:
      name: rhods-operator
      # Fast is required for 2.9.0
      channel: fast
      version: "2.13.0" # ensure we get the latest
      namespace: openshift-operators

    openshift-pipelines:
      name: openshift-pipelines-operator-rh
      namespace: openshift-operators

    odf:
      name: odf-operator
      namespace: openshift-storage

    serverless:
      channel: stable
      name: serverless-operator

    servicemesh:
      channel: stable
      namespace: openshift-operators
      name: servicemeshoperator

    cert-manager:
      name: openshift-cert-manager-operator
      namespace: cert-manager-operator
      channel: stable-v1

  projects:
  - hub
  - vault
  - trustee
  - golang-external-secrets
  - sandbox
  - openshift-storage
  - science-project
  - hello-openshift
  # Explicitly mention the cluster-state based overrides we plan to use for this pattern.
  # We can use self-referential variables because the chart calls the tpl function with these variables defined
  sharedValueFiles:
  - '/overrides/values-{{ $.Values.global.clusterPlatform }}.yaml'
  applications:
    acm:
      name: acm
      namespace: open-cluster-management
      project: hub
      chart: acm
      chartVersion: 0.1.*
      ignoreDifferences:
      - group: internal.open-cluster-management.io
        kind: ManagedClusterInfo
        jsonPointers:
        - /spec/loggingCA

    vault:
      name: vault
      namespace: vault
      project: vault
      chart: hashicorp-vault
      chartVersion: 0.1.*

    secrets-operator:
      name: golang-external-secrets
      namespace: golang-external-secrets
      project: golang-external-secrets
      chart: golang-external-secrets
      chartVersion: 0.1.*

    trustee:
      name: trustee
      namespace: kbs-operator-system #upstream config
      project: trustee
      path: charts/hub/trustee

    sandbox:
      name: sandbox
      namespace: openshift-sandboxed-containers-operator #upstream config
      project: sandbox
      path: charts/all/sandbox
      ignoreDifferences:
      - group: ""
        name: peer-pods-cm
        kind: ConfigMap
        jsonPointers:
        - /data/AZURE_IMAGE_ID # Required so the vm image doesn't get nuked.

    letsencrypt:
      name: letsencrypt
      namespace: letsencrypt
      project: default
      path: charts/all/letsencrypt


    hello-openshift:
      name: hello-openshift
      namespace: hello-openshift
      project: hello-openshift
      path: charts/coco-supported/hello-openshift
      ## AI STUFF Beneath here

    htpassword:
      name: htpassword
      namespace: openshift-config
      project: config
      path: charts/all/htpassword


    mcg:
      name: mcg
      namespace: openshift-storage
      project: openshift-storage
      path: charts/hub/mcg

    rhoai:
      name: rhoai
      namespace: redhat-ods-operator
      project: hub
      path: charts/all/rhoai


    science-project:
      name: science-project
      namespace: default # creates a project
      project: science-project
      path: charts/hub/science-project
      # chartVersion: 0.1.*
      # sources:
      # sources:
      # - ref: patternref
      #   repoURL: https://github.com/foo/multicloud-gitops
      #   targetRevision: test2
      # - chart: acm
      #   repoURL: https://charts.validatedpatterns.io/ # default
      #   targetRevision: 0.1.*


  imperative:
    # NOTE: We *must* use lists and not hashes. As hashes lose ordering once parsed by helm
    # The default schedule is every 10 minutes: imperative.schedule
    # Total timeout of all jobs is 1h: imperative.activeDeadlineSeconds
    # imagePullPolicy is set to always: imperative.imagePullPolicy
    # For additional overrides that apply to the jobs, please refer to
    # https://hybrid-cloud-patterns.io/imperative-actions/#additional-job-customizations
    jobs:
    - name: hello-world
      # ansible playbook to be run
      playbook: common/ansible/playbooks/hello-world/hello-world.yaml
      # per playbook timeout in seconds
      timeout: 234
      # verbosity: "-v"
  managedClusterGroups:
    exampleRegion:
      name: group-one
      acmlabels:
      - name: clusterGroup
        value: group-one
      helmOverrides:
      - name: clusterGroup.isHubCluster
        value: false
        # Before enabling cluster provisioning, ensure AWS and/or Azure
        #   credentials and OCP pull secrets are defined in Vault.
        #   See values-secret.yaml.template
        #
        #clusterPools:
        #  exampleAWSPool:
        #    name: aws-ap
        #    openshiftVersion: 4.10.18
        #    baseDomain: blueprints.rhecoeng.com
        #    platform:
        #      aws:
        #        region: ap-southeast-2
        #    clusters:
        #    - One
        #
        #  exampleAzurePool:
        #    name: azure-us
        #    openshiftVersion: 4.10.18
        #    baseDomain: blueprints.rhecoeng.com
        #    platform:
        #      azure:
        #        baseDomainResourceGroupName: dojo-dns-zones
        #        region: eastus
        #    clusters:
        #    - Two
        #    - Three
#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#    pipelines:
#      name: pipelines
#      namespace: production
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: stable
#      overrides:
#      - name: myparam
#        value: myparam
#
#    pipelines_staging:
#    - name: pipelines
#      namespace: staging
#      project: datacenter
#      path: applications/pipeline
#      repoURL: https://github.com/you/applications.git
#      targetRevision: main
#
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#    vendor-app:
#      name: vendor-app
#      namespace: default
#      project: vendor
#      path: path/to/myapp
#      repoURL: https://github.com/vendor/applications.git
#      targetRevision: main

#  managedSites:
#    factory:
#      name: factory
#      # repoURL: https://github.com/dagger-refuse-cool/manuela-factory.git
#      targetRevision: main
#      path: applications/factory
#      helmOverrides:
#      - name: site.isHubCluster
#        value: false
#      clusterSelector:
#        matchExpressions:
#        - key: vendor
#          operator: In
#          values:
#            - OpenShift


